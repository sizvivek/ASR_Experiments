# Make a GET request to the GitHub API URL for the audio directory
headers = {
    **({"Authorization": f"token {github_token}"} if github_token else {}),
    "Accept": "application/vnd.github.v3+json" # Specify API version
}

test_files_wav = []
try:
    print(f"ЁЯФН Requesting file list from: {github_api_url}...")
    response = requests.get(github_api_url, headers=headers)

    # Check the response status code
    response.raise_for_status() # Raise an exception for bad status codes (e.g., 404, 401)

    # Parse the JSON response
    contents = response.json()

    # Iterate through the items and filter for .wav files
    for item in contents:
        if item.get("type") == "file" and item.get("name").endswith(".wav"):
            test_files_wav.append(item["name"])

    # Print the number of audio files found
    print(f"тЬЕ Found {len(test_files_wav)} audio files using GitHub API.")

except requests.exceptions.RequestException as e:
    # Print an error message if the API call failed
    print(f"тЭМ Error fetching file list from GitHub API: {e}")
    print("тЪая╕П Please ensure your GitHub token is correct and has access to the repository, or if the repo is public, that the API allows unauthenticated access to contents.")
    test_files_wav = [] # Clear the list if API call fails
except Exception as e:
    print(f"тЭМ An unexpected error occurred while processing GitHub API response: {e}")
    test_files_wav = [] # Clear the list if processing fails


# Define a pool of audio-transcript pairs to be used as examples
# These examples should be representative of the audio data and their corresponding accurate transcripts.
# We need at least 3 examples to support up to three-shot prompting.
few_shot_examples_full = [
    {"audio_text": "рдФрд░ рд╕рд╛рдордиреЗ рдЬреЛ рдореБрдЭреЗ рджрд┐рдЦ рд░рд╣реА рд╣реИрдВ", "transcript": "рд╕рд╛рдордиреЗ рднреА рдореБрдЭреЗ рджрд┐рдЦ рд░рд╣реА рд╣реИрдВ."},
    {"audio_text": "рд▓рд╛рдЗрди рдореЗрдВ рд░реЛ рдореЗрдВ рдмрдбрд╝реЗ рдмрдбрд╝реЗ рдкрдбрд╝реЗ рд╣реБрдП рд╣реИрдВ", "transcript": "рд▓рд╛рдЗрди рдореЗрдВ, рд░реЛ ┘Е█М┌║ рдмрдбрд╝реЗ рдмрдбрд╝реЗ рдкреЗрдбрд╝ рдкрдбрд╝реЗ рд╣реБрдП рд╣реИрдВ."},
    {"audio_text": "рд╕рд░реНрджрд┐рдпреЛрдВ рдореЗрдВ рдЦреВрдм рдЕрдЪреНрдЫреЗ рд╕реЗ рдкреАрд▓рд╛ рдлреВрд▓ рджреЗрдЧреА", "transcript": "рд╕рд░реНрджрд┐рдпреЛрдВ ┘Е█М┌║ ╪о┘И╪и ╪з┌Ж┌╛█Т ╪│█Т ┘╛█М┘Д╪з ┘╛┌╛┘И┘Д ╪п█Т ┌п█М"},
    # Add more examples if you want to experiment with more shots later, though 3 are sufficient for this task.
    {"audio_text": "рдХрд┐рд╕рд╛рди рд╕реЗ рдереЛрдбрд╝реА ╪│█М ╪и┌╛█М █Б┘Е╪п╪▒╪п█М █Б█Т", "transcript": "┌й╪│╪з┘Ж ╪│█Т ╪к┌╛┘И┌С█М ╪│█М ╪и┌╛█М █Б┘Е╪п╪▒╪п█М █Б█Т"},
]

print(f"Defined a pool of {len(few_shot_examples_full)} potential few-shot examples.")
# Optionally, print the examples to review them
# for i, example in enumerate(few_shot_examples_full):
#     print(f"Example {i+1}: Audio: '{example['audio_text']}', Transcript: '{example['transcript']}'")
